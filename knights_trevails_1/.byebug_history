c
p kpf.root_node.move_tree[3].children
p kpf.root_node.move_tree[3].parent
puts kpf.root_node.move_tree[3]
print kpf.root_node.move_tree[3]
p kpf.root_node.move_tree[3]
p kpf.root_node.move_tree.length
p kpf.root_node.move_tree
exit
c
new_positions[0].class
new_positions[0]
self.considered_positions
display new_positions
list=
clear
c
display var local
var local
nva
display self.root_node.move_tree
n
s
child
s
n
s
self.root_node.children.first.parent
n
self.children
n
self.children
self
n
child_node.class
child_node
s
child_pos.class
display child_pos
s
n
display self.considered_positions
n
display new_positions
s
n
s
n
display child
display parent
display self.root_node.children
display queue
c
s
self.root_node.class
s
list=
display self.root_node.move_tree
display child
display parent.children
display parent
display queue
display self.root_node
c
child_pos.class
display child_pos
s
n
c
s
parent.class
parent.object_id
n
s
n
s
n
self.root_node.move_tree
self.root_node.value
self.root_node.class
self.root_node
n
list=
display child
display parent.children
display parent
display queue
display self.considered_positions
display self.root_node
s
c
undisplay 3
display self.root_node.move_tree
display queue
c
display self.root_node.move_tree
display queue
